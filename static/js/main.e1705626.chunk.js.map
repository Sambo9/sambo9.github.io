{"version":3,"sources":["config.ts","components/Firebase/firebase.ts","components/Firebase/context.ts","containers/Login/Login.tsx","containers/Home/Home.tsx","containers/Signup/Signup.tsx","components/Hanzi/Hanzi.tsx","utils/stringToLowerCaseWithoutAccent.ts","utils/constants.ts","containers/Daici/Daici.tsx","containers/Pinyin/Pinyin.tsx","App.tsx","serviceWorker.ts","components/Firebase/index.ts","index.tsx"],"names":["firebaseConfig","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Firebase","auth","database","createUser","email","password","createUserWithEmailAndPassword","signIn","signInWithEmailAndPassword","signOut","resetPassword","sendPasswordResetEmail","updatePassword","currentUser","onAuthStateChanged","user","getPronouns","ref","child","once","getHanzi","type","app","initializeApp","this","FirebaseContext","React","createContext","withRouter","props","firebase","useContext","useState","setEmail","setPassword","toggleStatus","setToggleStatus","messageError","setMessageError","errorStatus","setErrorStatus","handleEmailChange","e","target","value","className","htmlFor","name","required","onChange","onClick","disabled","TextField","label","error","helperText","Button","variant","then","res","history","push","catch","err","message","color","to","Home","Card","classes","root","Signup","passwordConfirm","setPasswordConfirm","length","Hanzi","bg","undefined","bgColor","dangerouslySetInnerHTML","__html","CircularProgress","toLowerCaseWithoutAccent","string","toLowerCase","normalize","replace","constants","thumbsUp","thumbsDown","Daici","hanziList","setHanziList","position","setPosition","pinyin","setPinyin","pinyinList","setPinyinList","errorMessage","setErrorMessage","correctAnswer","setCorrectAnswer","displayCorrectAnswer","setDisplayCorrectAnswer","isCorrect","setIsCorrect","isOver","setIsOver","useEffect","a","snapshot","Object","keys","val","values","getDaici","stringToLowerCaseWithoutAccent","InputProps","readOnly","paths","dongci","cihui","fuci","setValues","errorsStatus","setErrorsStatus","errorsMessage","setErrorsMessage","correctList","setCorrectList","category","location","pathname","substr","handlePinyinChange","index","corrects","errStatus","errMessage","valuesToChange","checkAnswer","dots","arrows","infinite","slidesToShow","slidesToScroll","swipeToSlide","map","hanzi","key","App","window","href","exact","path","component","Login","Pinyin","from","Boolean","hostname","match","ReactDOM","render","Provider","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e1705626.chunk.js","sourcesContent":["export const firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID,\n  measurementId: process.env.REACT_APP_MEASUREMENT_ID\n}\n","import app from 'firebase/app';\nimport {firebaseConfig} from \"../../config\";\nimport 'firebase/auth';\nimport 'firebase/database'\n\nclass Firebase {\n  auth: any;\n  database: any;\n  constructor() {\n    app.initializeApp(firebaseConfig);\n    this.auth = app.auth();\n    this.database = app.database()\n  }\n\n  createUser = (email: string, password: string): any => {\n    return this.auth.createUserWithEmailAndPassword(email, password)\n  }\n\n  signIn = (email: string, password: string): any => {\n    return this.auth.signInWithEmailAndPassword(email, password)\n  }\n\n  signOut = (): any => {\n    return this.auth.signOut()\n  }\n\n  resetPassword = (email: string): any => {\n    return this.auth.sendPasswordResetEmail(email)\n  }\n\n  updatePassword = (password: string): any => {\n    return this.auth.currentUser.updatePassword(password);\n  }\n\n  onAuthStateChanged = (): any => {\n    return this.auth.onAuthStateChanged((user: any) => !!user);\n  }\n\n  getPronouns = (): any => {\n    return this.database.ref('hanzi').child('pronouns').once('value')\n  }\n\n  getHanzi = (type: string) => {\n    return this.database.ref('hanzi').child(type).once('value')\n  }\n}\n\nexport default Firebase;\n","import React from 'react';\nimport Firebase from \"./firebase\";\nconst FirebaseContext = React.createContext<any|null>(Firebase);\nexport default FirebaseContext;\n","import React, {useState, useContext} from 'react'\nimport FirebaseContext from \"../../components/Firebase/context\";\nimport './Login.scss'\nimport {Link} from \"react-router-dom\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport {withRouter} from 'react-router-dom'\n\nconst Login = (props: any) => {\n  const firebase = useContext(FirebaseContext)\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [toggleStatus, setToggleStatus] = useState(false)\n  const [messageError, setMessageError] = useState('')\n  const [errorStatus, setErrorStatus] = useState(false)\n\n\n  const handleEmailChange = (e: any) => setEmail(e.target.value)\n  const handlePasswordChange = (e: any) => setPassword(e.target.value)\n  const handleSubmit = () => {\n    if (email && password) {\n      firebase.signIn(email, password)\n        .then((res: any) => {\n          setErrorStatus(false)\n          props.history.push('/')\n        })\n        .catch((err: any) => {\n          setErrorStatus(true)\n          setMessageError(err.message)\n        })\n    }\n  }\n\n  const toggleLogin = () => {\n    setToggleStatus(!toggleStatus)\n  }\n\n  const handleReset = () => {\n    firebase.resetPassword(email)\n  }\n\n  return (\n    <div className={'Login'}>\n      <h1>Login</h1>\n      {\n        toggleStatus\n          ? <>\n            <div className={'inputForm'}>\n              <label htmlFor=\"email\">Email</label>\n              <input type=\"email\" name={'email'} required={true} value={email} onChange={handleEmailChange}/>\n            </div>\n            <div className={'inputForm'}>\n              <button onClick={handleReset} disabled={!email}>Reset password</button>\n            </div>\n          </>\n          : <>\n            <div className={'inputForm'}>\n              <TextField\n                label={'Email'}\n                value={email}\n                onChange={handleEmailChange}\n                type={'email'}\n                error={errorStatus}\n                helperText={messageError}\n              />\n            </div>\n            <div className={'inputForm'}>\n              <TextField\n                label={'Password'}\n                value={password}\n                onChange={handlePasswordChange}\n                type={'password'}\n              />\n              <div className={'lost'} onClick={toggleLogin}>Password lost?</div>\n            </div>\n            <div className={'inputForm'}>\n              <Button variant=\"contained\" onClick={handleSubmit} disabled={!email || !password} color={'primary'}>Submit</Button>\n            </div>\n            <div className={'inputForm'}>No account yet? <Link to={'/signup'}>sign up</Link></div>\n          </>\n      }\n    </div>\n  )\n}\n\nexport default withRouter(Login)\n","import React from 'react'\nimport Card from \"@material-ui/core/Card\";\nimport './Home.scss'\nimport {Link} from 'react-router-dom'\n\nconst Home = (props: any) => {\n  return (\n    <div className={'Home'}>\n      <Link to={'daici'}>\n        <Card classes={{root: 'card'}}>\n          Pronoms\n        </Card>\n      </Link>\n      <Link to={'cihui'}>\n        <Card classes={{root: 'card'}}>\n          Vocabulaires\n        </Card>\n      </Link>\n      <Link to={'dongci'}>\n        <Card classes={{root: 'card'}}>\n          Verbes\n        </Card>\n      </Link>\n      <Link to={'fuci'}>\n        <Card classes={{root: 'card'}}>\n          Adverbes\n        </Card>\n      </Link>\n    </div>\n  )\n}\n\nexport default Home\n","import React, {useContext, useState} from 'react'\nimport {Link} from \"react-router-dom\";\nimport FirebaseContext from \"../../components/Firebase/context\";\nimport './Signup.scss'\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\n\nconst Signup = (props: any) => {\n  const firebase = useContext(FirebaseContext)\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [passwordConfirm, setPasswordConfirm] = useState('')\n  const [messageError, setMessageError] = useState ('')\n  const [errorStatus, setErrorStatus] = useState(false)\n\n  const handleEmailChange = (e: any) => setEmail(e.target.value)\n  const handlePasswordChange = (e: any) => setPassword(e.target.value)\n  const handlePasswordConfirmChange = (e: any) => setPasswordConfirm(e.target.value)\n  const handleSubmit = () => {\n    if (password.length < 4) {\n      setMessageError('Password minimum length is 4')\n      setErrorStatus(true)\n    } else if (password !== passwordConfirm) {\n      setMessageError('Password are not identical')\n      setErrorStatus(true)\n    } else {\n      setErrorStatus(false)\n    }\n\n    if (email && password && passwordConfirm) {\n      firebase.createUser(email, password)\n        .then((res: any) => {\n          return <Link to={'/login'}/>\n        })\n        .catch((err: any) => setMessageError(err.message))\n    }\n  }\n\n  return (\n      <div className={'Signup'}>\n        <h1>Signup</h1>\n        <div className={'inputForm'}>\n          <TextField\n            label={'Email'}\n            value={email}\n            onChange={handleEmailChange}\n            type={'email'}\n          />\n        </div>\n        <div className={`inputForm`}>\n          <TextField\n            label={'Password'}\n            value={password}\n            onChange={handlePasswordChange}\n            type={'password'}\n            error={errorStatus}\n                helperText={messageError}\n          />\n        </div>\n        <div className={'inputForm'}>\n          <TextField\n            label={'Password Confirmation'}\n            value={passwordConfirm}\n            onChange={handlePasswordConfirmChange}\n            type={'password'}\n            error={errorStatus}\n                helperText={messageError}\n          />\n        </div>\n\n        <div className={'inputForm'}>\n          <Button variant={'contained'} color={'primary'} onClick={handleSubmit} disabled={!email || !password || !passwordConfirm}>Submit</Button>\n        </div>\n        <div className={'inputForm'}>Already have an account? <Link to={'/login'}>Sign in</Link></div>\n      </div>\n  )\n}\n\nexport default Signup\n","import React from 'react'\nimport Card from \"@material-ui/core/Card\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport './Hanzi.scss'\n\ntype HanziProps = {\n  value: string,\n  bg?: boolean | undefined\n}\n\nconst Hanzi = (props: HanziProps) => {\n  const bgColor = (bg: boolean | undefined) => {\n    if (bg !== undefined) {\n      return bg ? 'correct' : 'wrong'\n    }\n    return\n  }\n\n  return (\n    <Card classes={{root: 'Hanzi'}} className={bgColor(props.bg)}>\n      {\n        props.value\n          ? <div dangerouslySetInnerHTML={{__html: props.value}}/>\n          : <CircularProgress />\n      }\n    </Card>\n  )\n}\n\nexport default Hanzi\n","export default function toLowerCaseWithoutAccent(string: string) {\n  if (string) {\n    return string.toLowerCase().normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\n  }\n}\n","const constants = {\n  thumbsUp: '&#128077;',\n  thumbsDown: '&#128078;',\n}\n\nexport default constants;\n","import React, {useContext, useEffect, useState} from 'react'\nimport FirebaseContext from \"../../components/Firebase/context\";\nimport Hanzi from \"../../components/Hanzi/Hanzi\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport './Daici.scss'\nimport {Link} from \"react-router-dom\";\nimport Home from '@material-ui/icons/Home';\nimport stringToLowerCaseWithoutAccent from \"../../utils/stringToLowerCaseWithoutAccent\";\nimport constants from '../../utils/constants'\n\nconst Daici = (props: any) => {\n  const firebase = useContext(FirebaseContext)\n  const [hanziList, setHanziList] = useState<any[]>([])\n  const [position, setPosition] = useState(0)\n  const [pinyin, setPinyin] = useState('')\n  const [pinyinList, setPinyinList] = useState<any[]>([])\n  const [errorStatus, setErrorStatus] = useState(false)\n  const [errorMessage, setErrorMessage] = useState('')\n  const [correctAnswer, setCorrectAnswer] = useState('')\n  const [displayCorrectAnswer, setDisplayCorrectAnswer] = useState(false)\n  const [isCorrect, setIsCorrect] = useState(false)\n  const [isOver, setIsOver] = useState(false)\n\n  useEffect(() => {\n    const getDaici = async () => {\n      const snapshot = await firebase.getPronouns()\n      setHanziList(Object.keys(snapshot.val()))\n      setPinyinList(Object.values(snapshot.val()))\n    }\n    getDaici();\n  }, [firebase])\n\n  const handlePinyinChange = (e: any) => {\n    setErrorStatus(false)\n    setErrorMessage('')\n    setPinyin(e.target.value)\n    setDisplayCorrectAnswer(false)\n    setIsCorrect(false)\n  }\n\n  const handleSubmit = () => {\n    setDisplayCorrectAnswer(true)\n    setCorrectAnswer(pinyinList[position])\n    if (stringToLowerCaseWithoutAccent(pinyin) === stringToLowerCaseWithoutAccent(pinyinList[position])) {\n      setIsCorrect(true)\n    } else {\n      setIsCorrect(false)\n      setErrorStatus(true)\n      setErrorMessage('Wrong answer')\n    }\n  }\n\n  const handleNext = () => {\n    setDisplayCorrectAnswer(false)\n    if (position < hanziList.length - 1) {\n      setPinyin('')\n      setPosition(position + 1)\n      setErrorStatus(false)\n      setErrorMessage('')\n    } else {\n      setDisplayCorrectAnswer(true)\n      setIsOver(true)\n    }\n  }\n\n  return (\n    <div className={'Daici'}>\n      <Link to={'/'}><Home className={'back'} /></Link>\n      <div className={'container'}>\n        <Hanzi value={hanziList[position]}/>\n\n        <TextField\n          onChange={handlePinyinChange}\n          value={pinyin}\n          error={errorStatus}\n          helperText={errorMessage}\n          label={'Answer'}\n          className={'input'}\n        />\n        <Button\n          variant=\"contained\"\n          onClick={handleSubmit}\n          disabled={!pinyin}\n          color={'primary'}\n          className={'button'}\n        >\n          Submit\n        </Button>\n        {\n           <div className={`correctAnswer ${displayCorrectAnswer ? 'fadeIn' : 'fadeOut'}`}>\n            {\n              isOver\n                ? <div>Exercice over <Link to={'/'}>Back home</Link></div>\n                : (<>\n                  {isCorrect ? <Hanzi value={constants.thumbsUp}/> : <Hanzi value={constants.thumbsDown}/>}\n                  <TextField\n                    label={'Correct answer'}\n                    value={correctAnswer}\n                    InputProps={{\n                      readOnly: true\n                    }}\n                    className={'input'}\n                  />\n                  <Button\n                    variant=\"contained\"\n                    onClick={handleNext}\n                    color={'primary'}\n                    className={'button'}\n                  >Next</Button>\n                </>)\n            }\n          </div>\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default Daici\n","import React, {useContext, useEffect, useState} from 'react'\nimport Home from \"@material-ui/icons/Home\";\nimport {Link, withRouter} from \"react-router-dom\";\nimport Hanzi from \"../../components/Hanzi/Hanzi\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FirebaseContext from \"../../components/Firebase/context\";\nimport './Pinyin.scss'\nimport Button from \"@material-ui/core/Button\";\nimport stringToLowerCaseWithoutAccent from \"../../utils/stringToLowerCaseWithoutAccent\";\nimport Slider from 'react-slick'\n\ntype paths = {\n  [key: string]: string\n}\n\nconst paths: paths = {\n  dongci: 'Verbes',\n  cihui: 'Vocabulaires',\n  fuci: 'Adverbes'\n}\n\nconst Pinyin = (props: any) => {\n  const firebase = useContext(FirebaseContext)\n  const [hanziList, setHanziList] = useState<any[]>([])\n  const [pinyin, setPinyin] = useState<any[]>([])\n  const [values, setValues] = useState<string[]>([])\n  const [errorsStatus, setErrorsStatus] = useState<boolean[]>([])\n  const [errorsMessage, setErrorsMessage] = useState<string[]>([])\n  const [correctList, setCorrectList] = useState<any[]>([])\n  const settings = {\n    dots: true,\n    arrows: true,\n    infinite: true,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    swipeToSlide: true,\n  };\n\n  useEffect(() => {\n    const getHanzi = async () => {\n      const category = props.location.pathname.substr(1)\n      const snapshot = await firebase.getHanzi(category)\n      setHanziList(Object.keys(snapshot.val()));\n      setPinyin(Object.values(snapshot.val()));\n    }\n    getHanzi();\n  }, [firebase, props.location.pathname])\n\n  const handlePinyinChange = (index: number) => (e: React.ChangeEvent<HTMLInputElement>) => {\n    const corrects = [...correctList]\n    corrects[index] = undefined\n    setCorrectList(corrects)\n\n    const errStatus = [...errorsStatus]\n    errStatus[index] = false\n    setErrorsStatus(errStatus)\n\n    const errMessage = [...errorsMessage]\n    errMessage[index] = ''\n    setErrorsMessage(errMessage)\n\n    const valuesToChange = [...values]\n    valuesToChange[index] = e.target.value\n    setValues(valuesToChange)\n  }\n\n  const checkAnswer = (index: number) => (e: React.MouseEvent) => {\n    const errStatus = [...errorsStatus]\n    const errMessage = [...errorsMessage]\n    const corrects = [...correctList]\n\n    if (stringToLowerCaseWithoutAccent(pinyin[index]) === stringToLowerCaseWithoutAccent(values[index])) {\n      errStatus[index] = false\n      errMessage[index] = ''\n      corrects[index] = true\n    } else {\n      errMessage[index] = pinyin[index]\n      errStatus[index] = true\n      corrects[index] = false\n    }\n    setCorrectList(corrects)\n    setErrorsStatus(errStatus)\n    setErrorsMessage(errMessage)\n  }\n\n  return (\n    <div className={'Pinyin'}>\n      <Link to={'/'}><Home className={'back'} /></Link>\n      <h1>{paths[props.location.pathname.substr(1)]}</h1>\n      <Slider {...settings}>\n        {\n          hanziList.map((hanzi, index) =>\n            <div key={hanzi} className={'container'}>\n              <Hanzi value={hanzi} bg={correctList[index]}/>\n              <TextField\n                label={'Answer'}\n                className={'input'}\n                value={values[index] || ''}\n                onChange={handlePinyinChange(index)}\n                error={errorsStatus[index]}\n                helperText={errorsMessage[index]}\n              />\n              <Button\n                className={'button'}\n                variant=\"contained\"\n                color={'primary'}\n                onClick={checkAnswer(index)}\n              >Submit</Button>\n            </div>\n          )\n        }\n      </Slider>\n    </div>\n  )\n}\n\nexport default withRouter(Pinyin)\n","import React, {useContext} from 'react';\nimport './App.scss';\nimport {Switch, Route, Redirect} from 'react-router-dom';\nimport Login from \"./containers/Login/Login\";\nimport Home from \"./containers/Home/Home\";\nimport Signup from './containers/Signup/Signup'\nimport FirebaseContext from \"./components/Firebase/context\";\nimport Daici from \"./containers/Daici/Daici\";\nimport Pinyin from \"./containers/Pinyin/Pinyin\";\nimport Close from '@material-ui/icons/Close';\n\nconst App: React.FC = () => {\n  const firebase = useContext(FirebaseContext)\n\n  return (\n    <div className=\"App\">\n      {!firebase.onAuthStateChanged() && <Redirect to={'/login'}/>}\n      <Close\n        onClick={() => {\n          firebase.signOut()\n          window.location.href = '/login'\n        }}\n        className={'logout'}/>\n      <Switch>\n        <Route exact={true} path={'/'} component={Home}/>\n        <Route exact={true} path={'/login'} component={Login}/>\n        <Route exact={true} path={'/signup'} component={Signup}/>\n        <Route exact={true} path={'/daici'} component={Daici}/>\n        <Route exact={true} path={'/cihui'} component={Pinyin}/>\n        <Route exact={true} path={'/dongci'} component={Pinyin}/>\n        <Route exact={true} path={'/fuci'} component={Pinyin}/>\n        <Redirect from=\"*\" to=\"/\"/>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import FirebaseContext from './context';\nimport Firebase from './firebase';\nexport default Firebase;\nexport { FirebaseContext };\n","  import React from 'react';\n  import ReactDOM from 'react-dom';\n  import './index.css';\n  import App from './App';\n  import * as serviceWorker from './serviceWorker';\n  import {BrowserRouter} from \"react-router-dom\";\n  import Firebase, { FirebaseContext } from './components/Firebase';\n\n\n  ReactDOM.render(\n    <BrowserRouter>\n      <FirebaseContext.Provider value={new Firebase()}>\n      <App />\n      </FirebaseContext.Provider>\n    </BrowserRouter>\n    , document.getElementById('root'));\n\n  // If you want your app to work offline and load faster, you can change\n  // unregister() to register() below. Note this comes with some pitfalls.\n  // Learn more about service workers: https://bit.ly/CRA-PWA\n  serviceWorker.unregister();\n"],"sourceRoot":""}